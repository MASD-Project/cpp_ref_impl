#+title: cpp_ref_impl.boost_model
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
:PROPERTIES:
:masd.codec.dia.comment: true
:masd.codec.model_modules: cpp_ref_impl.boost_model
:masd.codec.input_technical_space: cpp
:masd.codec.reference: cpp.builtins
:masd.codec.reference: cpp.std
:masd.codec.reference: cpp.boost
:masd.codec.reference: masd
:masd.codec.reference: cpp_ref_impl.profiles
:masd.physical.delete_extra_files: true
:masd.physical.delete_empty_directories: true
:masd.cpp.enabled: true
:masd.cpp.standard: c++-17
:masd.csharp.enabled: false
:masd.variability.profile: cpp_ref_impl.profiles.base.enable_all_facets
:END:
* class_b                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::shared_ptr<class_a>
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::vector<boost::shared_ptr<class_a>>
   :END:
** prop_2                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::unordered_map<int,boost::shared_ptr<class_a>>
   :END:
** prop_3                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::shared_ptr<pkg1::class_c>
   :END:
** prop_4                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::shared_ptr<class_base>
   :END:
** prop_5                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::vector<boost::shared_ptr<class_base>>
   :END:
** prop_6                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: pkg1::class_c
   :END:
* class_a                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: unsigned int
   :END:
* pkg1                                                         :masd_element:
** class_c                                                     :masd_element:
*** prop_0                                                   :masd_attribute:
    :PROPERTIES:
    :masd.codec.type: int
    :END:
*** prop_1                                                   :masd_attribute:
    :PROPERTIES:
    :masd.codec.type: std::vector<class_a>
    :END:
* class_base                                                   :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: int
   :END:
* class_derived                                                :masd_element:
  :PROPERTIES:
  :masd.codec.parent: class_base
  :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: int
   :END:
* class_d                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::optional<int>
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::optional<class_a>
   :END:
** prop_2                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::optional<pkg1::class_c>
   :END:
** prop_3                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::optional<std::vector<class_a>>
   :END:
* some_service                                                 :masd_element:
  :PROPERTIES:
  :masd.codec.stereotypes: cpp_ref_impl::handcrafted::typeable
  :END:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::shared_ptr<class_a>
   :END:
* class_e                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::variant<int,double>
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::variant<int,class_derived,double>
   :END:
** prop_2                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::vector<boost::variant<int,class_derived,double>>
   :END:
** prop_3                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::variant<int,std::string,char>
   :END:
* class_f                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::gregorian::date
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::posix_time::ptime
   :END:
** prop_2                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::posix_time::time_duration
   :END:
** prop_3                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<boost::gregorian::date>
   :END:
** prop_4                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<boost::posix_time::ptime>
   :END:
** prop_5                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<boost::posix_time::time_duration>
   :END:
* class_g                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::filesystem::path
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: std::list<boost::filesystem::path>
   :END:
* class_h                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: boost::property_tree::ptree
   :END:
* ptime_primitive                                              :masd_element:
  :PROPERTIES:
  :masd.primitive.underlying_element: boost::posix_time::ptime
  :masd.codec.stereotypes: masd::primitive
  :END:

Test a primitive with an underlying ptime.

* time_duration_primitive                                      :masd_element:
  :PROPERTIES:
  :masd.primitive.underlying_element: boost::posix_time::time_duration
  :masd.codec.stereotypes: masd::primitive
  :END:

Test a primitive with an underlying time_duration.

* date_primitive                                               :masd_element:
  :PROPERTIES:
  :masd.primitive.underlying_element: boost::gregorian::date
  :masd.codec.stereotypes: masd::primitive
  :END:

Test a primitive with an underlying time_duration.

* class_j                                                      :masd_element:
** prop_0                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: ptime_primitive
   :END:
** prop_1                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: time_duration_primitive
   :END:
** prop_2                                                    :masd_attribute:
   :PROPERTIES:
   :masd.codec.type: date_primitive
   :END:
* registrar                                                    :masd_element:
  :PROPERTIES:
  :masd.codec.stereotypes: masd::serialization::type_registrar
  :END:
* main                                                         :masd_element:
  :PROPERTIES:
  :masd.codec.stereotypes: masd::entry_point, cpp_ref_impl::untypable
  :END:
* CMakeLists                                                   :masd_element:
  :PROPERTIES:
  :masd.codec.stereotypes: masd::build::cmakelists
  :END:
