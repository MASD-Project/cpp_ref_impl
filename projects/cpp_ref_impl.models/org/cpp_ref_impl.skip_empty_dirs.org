#+title: cpp_ref_impl.skip_empty_dirs
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
#+tags: { element(e) attribute(a) module(m) }
:PROPERTIES:
:masd.codec.model_modules: cpp_ref_impl.skip_empty_dirs
:masd.codec.input_technical_space: cpp
:masd.codec.reference: cpp.builtins
:masd.codec.reference: masd
:masd.codec.reference: cpp_ref_impl.profiles
:masd.physical.delete_extra_files: true
:masd.physical.delete_empty_directories: false
:masd.physical.ignore_files_matching_regex: .*/expected_ignore.*
:masd.cpp.enabled: true
:masd.cpp.standard: c++-17
:masd.csharp.enabled: false
:masd.variability.profile: cpp_ref_impl.profiles.base.enable_all_facets
:END:

This model is designed to test that setting delete empty directory to
false does not delete directories.

Because git does not version control empty directories, the model
requires some additional setup in order to be tested. You need to
generate this model into a folder, programmatically create some empty
directories and then check to see if they are deleted on generation.

A similar test for the flag set to true can be done with any test
model as they all have it.

* one_property                                                      :element:
  :PROPERTIES:
  :custom_id: O1
  :END:

This class has not changed.

** public_attribute                                               :attribute:
   :PROPERTIES:
   :masd.codec.type: int
   :END:
* main                                                              :element:
  :PROPERTIES:
  :custom_id: O2
  :masd.codec.stereotypes: masd::entry_point, cpp_ref_impl::untypable
  :END:
* CMakeLists                                                        :element:
  :PROPERTIES:
  :custom_id: O3
  :masd.codec.stereotypes: masd::build::cmakelists
  :END:
